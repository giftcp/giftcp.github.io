[{"body":"","link":"https://giftcp.github.io/","section":"","tags":[],"title":""},{"body":"","link":"https://giftcp.github.io/tags/index/","section":"tags","tags":null,"title":"Index"},{"body":"","link":"https://giftcp.github.io/tags/leadership/","section":"tags","tags":null,"title":"Leadership"},{"body":"","link":"https://giftcp.github.io/tags/managment/","section":"tags","tags":null,"title":"Managment"},{"body":"","link":"https://giftcp.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://giftcp.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://giftcp.github.io/tags/talent/","section":"tags","tags":null,"title":"Talent"},{"body":"When High Performers Leave: Why It’s Not Always a Setback\nI have been an IT manager for almost 15 years. Throughout that time, many team members have come and gone. The hardest part is always losing a high-performing member. However, as a manager, I believe everyone deserves opportunities for growth, which often means seeing valuable team members leave for companies that offer higher pay, a better work environment, or other incentives. I once read that it’s typically the best performers who leave first and over the years, I’ve come to accept this as a reality.\nWhat might initially feel like a setback actually has a silver lining. In this field, many IT professionals have a natural affinity for certain tasks or technologies. For example, I might have a feature I'd wanted to implement that remained stagnant for months—then, a new hire joins, and the feature is immediately tackled. Every new team member brings fresh ideas and skills, which fuels continuous improvement.\nWhile losing top talent is never easy and the hiring process can be daunting, I’ve come to see the bright side. When done thoughtfully, hiring new talent brings fresh perspectives that enrich our team.\n","link":"https://giftcp.github.io/post/when-high-performers-leave-why-its-not-always-a-setback/","section":"post","tags":["leadership","managment","talent"],"title":"When High Performers Leave: Why It’s Not Always a Setback"},{"body":"I’m setting up my Raspberry Pi as a media server, and I’ve got an old LED TV—basically a \u0026quot;dumb\u0026quot; TV. Adding this setup will definitely make it smart, haha!\nAfter installing Raspbian OS, I tried using Nano, but I couldn’t stand it for long. I need Vim. I need Neovim. I just couldn’t go on like that, so I visited the Neovim website. However, there are no precompiled binaries for the Raspberry Pi. The repository works, but the version is 0.7.x, which definitely won’t cut it.\nSo, compiling it from source was the only option. Here are the steps I followed:\nClone the Neovim repository:\n1git clone https://github.com/neovim/neovim.git Navigate to the Neovim directory:\n1cd neovim Build Neovim:\n1make CMAKE_BUILD_TYPE=RelWithDebInfo Move into the build directory:\n1cd build Package it as a DEB file:\n1cpack -G DEB Install the DEB package:\n1sudo dpkg -i nvim-linux64.deb After watching the terminal scroll for a while, boom! We now have the latest Neovim running on the Raspberry Pi. I love Linux!\nIf you have never tried compiling an application from source this could be a good place to start\nPS: I was missing one dependency \u0026quot;gettext\u0026quot; which I had to install after the linking phase failed\n","link":"https://giftcp.github.io/post/from-nano-to-neovim-a-raspberry-pi-setup-adventure/","section":"post","tags":["neovim","raspberry_pi","pi","raspberry","linux","git"],"title":"From Nano to Neovim A Raspberry Pi Setup Adventure"},{"body":"","link":"https://giftcp.github.io/tags/git/","section":"tags","tags":null,"title":"Git"},{"body":"","link":"https://giftcp.github.io/tags/linux/","section":"tags","tags":null,"title":"Linux"},{"body":"","link":"https://giftcp.github.io/tags/neovim/","section":"tags","tags":null,"title":"Neovim"},{"body":"","link":"https://giftcp.github.io/tags/pi/","section":"tags","tags":null,"title":"Pi"},{"body":"","link":"https://giftcp.github.io/tags/raspberry/","section":"tags","tags":null,"title":"Raspberry"},{"body":"","link":"https://giftcp.github.io/tags/raspberry_pi/","section":"tags","tags":null,"title":"Raspberry_pi"},{"body":"","link":"https://giftcp.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://giftcp.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://giftcp.github.io/tags/obsidian/","section":"tags","tags":null,"title":"Obsidian"},{"body":"Prerequisites This tutorial shows how the work flow on how to create content in obsidian git and hugo and have it available on git pages wit minimal scripting\nThe following are the prerequisites\ngit hugo obsidian (optional) Github pages This workflow can be achieved without obsidian. However, having obsidian greatly helps with visualizing your markdown before it is committed to the website.\nIn order to use git pages you first need to create a git repo with the following exact name.\n1\u0026lt;username\u0026gt;.github.io This repo is reserved for git hub pages. to test it you can put a boiler plate index .html file in there. and navigate to the site\nHugo Setup install Hugo based on your system instructions create a Hugo site Choose and template and install it based on the template instructions Hugo Obsidian integration To easily move content between Obsidian and Hugo I simply created a symbolic link between the Hugo Content folder and Obsidian. This ensured that any markdown updates I make in Obsidian are immediately reflected in Hugo without the need of any code. The key thing is to keep your drafts in post until you feel they are ready to be published\nThe following are the key steps: -\ncreate the post in the post folder with draft version Create your post content and unchecked draft Please ensure that you set your baseurl in the hugo.toml file otherwise your page will not render well when pushed online Posting content online Huge creates web pages by compiling your markdown to html. This is done when the Hugo command is run. Hugo takes your markdown and converts it to html and places the html files in the public folder\n[!note] I noticed that when i just run the Hugo command without the options it replaced my baseurl. As such i had to run it with the options below to ensure that my baseurl is not changed. If there is something I missed please share it in the comments below.\n1hugo --baseURL=https://giftcp.github.io/ Each time the site is recompiled the static files in the public directory are updated or created. As such we need to re-upload them to git.\nstage the files\n1git add . commit the changes\n1git commit -m \u0026#34;new content\u0026#34; Push the changes to the remote repo\n1git push origin main As you can see to maintain this workflow it only requires 4 lines of code that can be bundled into a single script.\n1hugo --baseURL=https://giftcp.github.io/ 2git add . 3git commit -m \u0026#34;new content\u0026#34; # a random function can usied to generete text for the commit messege 4git push origin main Coming Soon the keenest of you would have noticed that i have not documented handling images. The following are some option i intend to use\nA script to update the markdown image path store the images online and map my obsidan image path online. I like the second option i will share it in my next post\n","link":"https://giftcp.github.io/post/obsidian-hugo-git-workflow/","section":"post","tags":["obsidian","Hugo","git"],"title":"Obsidian HUGO Git Workflow"},{"body":"","link":"https://giftcp.github.io/categories/technology/","section":"categories","tags":null,"title":"Technology"},{"body":"","link":"https://giftcp.github.io/categories/arch/","section":"categories","tags":null,"title":"Arch"},{"body":"","link":"https://giftcp.github.io/tags/arch/","section":"tags","tags":null,"title":"Arch"},{"body":"Arch Linux Installation Guide (UEFI, GPT, systemd-boot, LUKS, Btrfs) 1. Initial Setup 1.1 Laptop Model Identify the model for compatibility, especially for Wi-Fi and graphics.\n1.2 ISO Download Download the latest Arch ISO from: https://archlinux.org/download/\n1.3 Set Console Font (Optional) If the console font appears too small, set a larger one:\n1setfont ter-v24b To copy the font for persistence:\n1cp /usr/share/kbd/consolefonts/ter-v24b.psf.gz /mnt/usr/share/kbd/consolefonts Other font options (located in /usr/share/kbd/consolefonts): ter-132n lat9w-16 sun12x22 ter-u28b 1.4 Set Alias for Clear Command 1alias c=clear 1.5 Set Keyboard Layout Default layout is us. To change (e.g. to UK):\n1loadkeys uk 2. Network Configuration 2.1 Connect to Wi-Fi Use iwctl or nmtui to connect to a wireless network.\n2.2 Verify Internet Access 1ping archlinux.org 2.3 Set Root Password 1passwd 2.4 SSH Access (Optional) 1ip a 2ssh root@\u0026lt;ip-address\u0026gt; 3. Time and Locale Configuration 3.1 Check and Set Time 1timedatectl 3.2 Set Timezone 1timedatectl list-timezones 2timedatectl set-timezone Africa/Blantyre 4. UEFI Mode Verification 1cat /sys/firmware/efi/fw_platform_size 5. Partitioning Scheme (GPT) Partition Size Type Mount Point p1 512MB EFI /boot p2 Rest LUKS+Btrfs / (subvolumes) p3 2–4GB Linux Swap swap 6. LUKS and Btrfs Setup 6.1 Encrypt Root Partition 1cryptsetup luksFormat /dev/nvme0n1p2 2cryptsetup open /dev/nvme0n1p2 luks_btrfs 6.2 Format Btrfs 1mkfs.btrfs /dev/mapper/luks_btrfs 2mount /dev/mapper/luks_btrfs /mnt 6.3 Create Btrfs Subvolumes 1btrfs subvolume create /mnt/@ 2btrfs subvolume create /mnt/@home 3umount /mnt 6.4 Setup Swap and EFI 1mkswap /dev/nvme0n1p3 2swapon /dev/nvme0n1p3 3mkfs.fat -F32 /dev/nvme0n1p1 6.5 Mount Subvolumes and Boot 1mount -o subvol=@ /dev/mapper/luks_btrfs /mnt 2mkdir -p /mnt/{home,boot} 3mount -o subvol=@home /dev/mapper/luks_btrfs /mnt/home 4mount /dev/nvme0n1p1 /mnt/boot 6.6 Verify Subvolumes 1btrfs subvolume list /mnt 7. Install Arch Linux Base 1pacstrap -K /mnt base base-devel linux linux-firmware git btrfs-progs efibootmgr inotify-tools timeshift neovim networkmanager pipewire pipewire-alsa pipewire-pulse pipewire-jack wireplumber reflector zsh zsh-completions zsh-autosuggestions openssh man sudo iwd hyprland intel-ucode tmux 8. System Configuration (Inside chroot) 8.1 Generate Fstab 1genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 2arch-chroot /mnt 8.2 Timezone \u0026amp; Clock 1ln -sf /usr/share/zoneinfo/Africa/Blantyre /etc/localtime 2hwclock --systohc 8.3 Locale 1nvim /etc/locale.gen 2# Uncomment en_US.UTF-8 3locale-gen 4echo \u0026#34;LANG=en_US.UTF-8\u0026#34; \u0026gt; /etc/locale.conf 9. Hostname and Console Font 1echo \u0026#34;jarvis\u0026#34; \u0026gt; /etc/hostname 2cp /usr/share/kbd/consolefonts/ter-v24b.psf.gz /usr/share/kbd/consolefonts 3echo \u0026#34;FONT=ter-v24b\u0026#34; \u0026gt; /etc/vconsole.conf 10. Initramfs Configuration What is initramfs? initramfs (initial RAM filesystem) is a temporary root filesystem loaded into memory during the boot process. It provides essential drivers and scripts that allow the real root filesystem to be mounted. In encrypted or complex setups, it is crucial for unlocking LUKS containers and mounting Btrfs subvolumes before handing control to the main OS.\n10.1 Configure initramfs Edit /etc/mkinitcpio.conf:\n1HOOKS=(base systemd autodetect microcode modconf keyboard sd-vconsole kms sd-encrypt block btrfs filesystems fsck) 10.2 Rebuild initramfs 1mkinitcpio -P 11. Install Bootloader (systemd-boot) 1mount /dev/nvme0n1p1 /mnt/boot 2arch-chroot /mnt 3bootctl install 4bootctl update Create Boot Entry Create /boot/loader/entries/arch.conf:\n1title Arch Linux 2linux /vmlinuz-linux 3initrd /initramfs-linux.img 4options rd.luks.name=\u0026lt;UUID\u0026gt;=luks_btrfs root=/dev/mapper/luks_btrfs rw Get the UUID:\n1blkid /dev/nvme0n1p2 ","link":"https://giftcp.github.io/post/arch_linux_installation/","section":"post","tags":["arch","linux","mkinitcpio","systemd","btrfs","luks"],"title":"Arch installation on a BTRFS root filesystem with LUKS encryption"},{"body":"","link":"https://giftcp.github.io/series/arch-linux/","section":"series","tags":null,"title":"Arch Linux"},{"body":"","link":"https://giftcp.github.io/tags/btrfs/","section":"tags","tags":null,"title":"Btrfs"},{"body":"","link":"https://giftcp.github.io/categories/linux/","section":"categories","tags":null,"title":"Linux"},{"body":"","link":"https://giftcp.github.io/tags/luks/","section":"tags","tags":null,"title":"Luks"},{"body":"","link":"https://giftcp.github.io/tags/mkinitcpio/","section":"tags","tags":null,"title":"Mkinitcpio"},{"body":"","link":"https://giftcp.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://giftcp.github.io/tags/systemd/","section":"tags","tags":null,"title":"Systemd"},{"body":"","link":"https://giftcp.github.io/tags/backup/","section":"tags","tags":null,"title":"Backup"},{"body":"","link":"https://giftcp.github.io/tags/power/","section":"tags","tags":null,"title":"Power"},{"body":"","link":"https://giftcp.github.io/tags/protection/","section":"tags","tags":null,"title":"Protection"},{"body":"Homelabs are fantastic. They foster an excellent learning environment, provide hands-on experience with enterprise technologies, and allow you to take full control of your data and services. But how safe is your data? How reliable is your setup? Before jumping headfirst into hosting critical services at home, it’s essential to consider some often-overlooked challenges that could turn your homelab into a liability rather than an asset.\nStorage: More Than Just Disk Space\nOne of the biggest pitfalls of homelabs is storage management. Many enthusiasts underestimate the risks associated with data loss or corruption. Key factors to consider include:\nPhysical Failure – Hard drives and SSDs have a finite lifespan. Without redundancy, a single failure could mean total data loss. Corruption – Power failures, unclean shutdowns, or even bit rot can silently corrupt data over time. Backups – RAID is not a backup. Ensure you have offsite backups or at least a secondary backup strategy. Recovery Planning – Have you tested your restore process? A backup is useless if it can't be restored when needed.\nSecurity: Your Data is a Target\nRunning services from home exposes you to cybersecurity risks that many homelab enthusiasts overlook. Consider: External Threats – If your homelab is internet-facing, it is constantly being probed by bots and bad actors looking for vulnerabilities. Data Ex-filtration – A breach can mean your sensitive files, passwords, or even identity being stolen. Misconfigurations – Open ports, weak passwords, and outdated software can turn your homelab into an easy target. Network Segmentation – Keeping your homelab on the same network as your personal devices is a recipe for disaster. Implement VLANs or firewalls to isolate services.\nReliability: Can You Afford Downtime?\nEnterprise environments have redundancy, monitoring, and failover mechanisms. Your homelab should too, especially if you’re hosting critical services.\nPower Protection – A UPS (Uninterruptible Power Supply) is essential to avoid sudden shutdowns and data corruption. Cooling and Maintenance – Dust buildup, heat, and aging hardware can silently degrade performance and reliability. High Availability (HA) – If your homelab runs important services, consider failover setups or replication. Monitoring \u0026amp; Alerts – Log aggregation, uptime monitoring, and alerting tools (such as Zabbix, Grafana, or Prometheus) can notify you of failures before they become catastrophic. Homelabs are a great way to learn and take control of your digital life, but they require careful planning and ongoing maintenance. Before shifting your important data and services to your homelab, ensure that storage, security, and reliability are addressed.\nWould you trust your homelab if it were running a business-critical service? If the answer is no, then it's time to rethink your setup. These are note must haves for a homelab. But they are certainly things to consider as you gain more experience and your home lab grows\n","link":"https://giftcp.github.io/post/redundancy-backups-and-security/","section":"post","tags":["backup","security","protection","storage","power"],"title":"Redundancy, Backups, and Security"},{"body":"","link":"https://giftcp.github.io/tags/security/","section":"tags","tags":null,"title":"Security"},{"body":"","link":"https://giftcp.github.io/tags/storage/","section":"tags","tags":null,"title":"Storage"},{"body":"","link":"https://giftcp.github.io/archives/","section":"","tags":null,"title":""}]