[{"body":"","link":"https://giftcp.github.io/","section":"","tags":[],"title":""},{"body":"this is a test page\n","link":"https://giftcp.github.io/post/arch/","section":"post","tags":["Tag_name1","Tag_name2"],"title":"Arch"},{"body":"","link":"https://giftcp.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://giftcp.github.io/tags/index/","section":"tags","tags":null,"title":"Index"},{"body":"","link":"https://giftcp.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://giftcp.github.io/tags/tag_name1/","section":"tags","tags":null,"title":"Tag_name1"},{"body":"","link":"https://giftcp.github.io/tags/tag_name2/","section":"tags","tags":null,"title":"Tag_name2"},{"body":"","link":"https://giftcp.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://giftcp.github.io/categories/technology/","section":"categories","tags":null,"title":"Technology"},{"body":"","link":"https://giftcp.github.io/categories/arch/","section":"categories","tags":null,"title":"Arch"},{"body":"","link":"https://giftcp.github.io/tags/arch/","section":"tags","tags":null,"title":"Arch"},{"body":"Arch Linux Installation Guide (UEFI, GPT, systemd-boot, LUKS, Btrfs) 1. Initial Setup 1.1 Laptop Model Identify the model for compatibility, especially for Wi-Fi and graphics.\n1.2 ISO Download Download the latest Arch ISO from: https://archlinux.org/download/\n1.3 Set Console Font (Optional) If the console font appears too small, set a larger one:\n1setfont ter-v24b To copy the font for persistence:\n1cp /usr/share/kbd/consolefonts/ter-v24b.psf.gz /mnt/usr/share/kbd/consolefonts Other font options (located in /usr/share/kbd/consolefonts): ter-132n lat9w-16 sun12x22 ter-u28b 1.4 Set Alias for Clear Command 1alias c=clear 1.5 Set Keyboard Layout Default layout is us. To change (e.g. to UK):\n1loadkeys uk 2. Network Configuration 2.1 Connect to Wi-Fi Use iwctl or nmtui to connect to a wireless network.\n2.2 Verify Internet Access 1ping archlinux.org 2.3 Set Root Password 1passwd 2.4 SSH Access (Optional) 1ip a 2ssh root@\u0026lt;ip-address\u0026gt; 3. Time and Locale Configuration 3.1 Check and Set Time 1timedatectl 3.2 Set Timezone 1timedatectl list-timezones 2timedatectl set-timezone Africa/Blantyre 4. UEFI Mode Verification 1cat /sys/firmware/efi/fw_platform_size 5. Partitioning Scheme (GPT) Partition Size Type Mount Point p1 512MB EFI /boot p2 Rest LUKS+Btrfs / (subvolumes) p3 2–4GB Linux Swap swap 6. LUKS and Btrfs Setup 6.1 Encrypt Root Partition 1cryptsetup luksFormat /dev/nvme0n1p2 2cryptsetup open /dev/nvme0n1p2 luks_btrfs 6.2 Format Btrfs 1mkfs.btrfs /dev/mapper/luks_btrfs 2mount /dev/mapper/luks_btrfs /mnt 6.3 Create Btrfs Subvolumes 1btrfs subvolume create /mnt/@ 2btrfs subvolume create /mnt/@home 3umount /mnt 6.4 Setup Swap and EFI 1mkswap /dev/nvme0n1p3 2swapon /dev/nvme0n1p3 3mkfs.fat -F32 /dev/nvme0n1p1 6.5 Mount Subvolumes and Boot 1mount -o subvol=@ /dev/mapper/luks_btrfs /mnt 2mkdir -p /mnt/{home,boot} 3mount -o subvol=@home /dev/mapper/luks_btrfs /mnt/home 4mount /dev/nvme0n1p1 /mnt/boot 6.6 Verify Subvolumes 1btrfs subvolume list /mnt 7. Install Arch Linux Base 1pacstrap -K /mnt base base-devel linux linux-firmware git btrfs-progs efibootmgr inotify-tools timeshift neovim networkmanager pipewire pipewire-alsa pipewire-pulse pipewire-jack wireplumber reflector zsh zsh-completions zsh-autosuggestions openssh man sudo iwd hyprland intel-ucode tmux 8. System Configuration (Inside chroot) 8.1 Generate Fstab 1genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 2arch-chroot /mnt 8.2 Timezone \u0026amp; Clock 1ln -sf /usr/share/zoneinfo/Africa/Blantyre /etc/localtime 2hwclock --systohc 8.3 Locale 1nvim /etc/locale.gen 2# Uncomment en_US.UTF-8 3locale-gen 4echo \u0026#34;LANG=en_US.UTF-8\u0026#34; \u0026gt; /etc/locale.conf 9. Hostname and Console Font 1echo \u0026#34;jarvis\u0026#34; \u0026gt; /etc/hostname 2cp /usr/share/kbd/consolefonts/ter-v24b.psf.gz /usr/share/kbd/consolefonts 3echo \u0026#34;FONT=ter-v24b\u0026#34; \u0026gt; /etc/vconsole.conf 10. Initramfs Configuration What is initramfs? initramfs (initial RAM filesystem) is a temporary root filesystem loaded into memory during the boot process. It provides essential drivers and scripts that allow the real root filesystem to be mounted. In encrypted or complex setups, it is crucial for unlocking LUKS containers and mounting Btrfs subvolumes before handing control to the main OS.\n10.1 Configure initramfs Edit /etc/mkinitcpio.conf:\n1HOOKS=(base systemd autodetect microcode modconf keyboard sd-vconsole kms sd-encrypt block btrfs filesystems fsck) 10.2 Rebuild initramfs 1mkinitcpio -P 11. Install Bootloader (systemd-boot) 1mount /dev/nvme0n1p1 /mnt/boot 2arch-chroot /mnt 3bootctl install 4bootctl update Create Boot Entry Create /boot/loader/entries/arch.conf:\n1title Arch Linux 2linux /vmlinuz-linux 3initrd /initramfs-linux.img 4options rd.luks.name=\u0026lt;UUID\u0026gt;=luks_btrfs root=/dev/mapper/luks_btrfs rw Get the UUID:\n1blkid /dev/nvme0n1p2 ","link":"https://giftcp.github.io/post/arch_linux_installation/","section":"post","tags":["arch","linux","mkinitcpio","systemd","btrfs","luks"],"title":"Arch installation on a BTRFS root filesystem with LUKS encryption"},{"body":"","link":"https://giftcp.github.io/series/arch-linux/","section":"series","tags":null,"title":"Arch Linux"},{"body":"","link":"https://giftcp.github.io/tags/btrfs/","section":"tags","tags":null,"title":"Btrfs"},{"body":"","link":"https://giftcp.github.io/categories/linux/","section":"categories","tags":null,"title":"Linux"},{"body":"","link":"https://giftcp.github.io/tags/linux/","section":"tags","tags":null,"title":"Linux"},{"body":"","link":"https://giftcp.github.io/tags/luks/","section":"tags","tags":null,"title":"Luks"},{"body":"","link":"https://giftcp.github.io/tags/mkinitcpio/","section":"tags","tags":null,"title":"Mkinitcpio"},{"body":"","link":"https://giftcp.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://giftcp.github.io/tags/systemd/","section":"tags","tags":null,"title":"Systemd"},{"body":"","link":"https://giftcp.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"","link":"https://giftcp.github.io/categories/syntax/","section":"categories","tags":null,"title":"Syntax"},{"body":"","link":"https://giftcp.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://giftcp.github.io/post/bundle/","section":"post","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"\r","link":"https://giftcp.github.io/post/map/","section":"post","tags":null,"title":"Using OpenStreetMap"},{"body":"The \u0026quot;Notices\u0026quot; shortcode enables you to call out pieces of information - sidebars, warnings, tips, etc.\nTo create a notice on a page, you can use the notice shortcode.\nYou use the notice shortcode, with the first parameter being one of note, info, tip, and warning. Then add a title for your note in quotes as the second parameter. The inner body of the note can be whatever markdown you want to create.\nThe following shortcode syntax within a markdown doc:\n1{{% notice note \u0026#34;Note\u0026#34; %}} 2This is a standard \u0026#34;note\u0026#34; style. 3{{% /notice %}} will render as:\nNote This is a standard \u0026quot;note\u0026quot; style.\nThe other three variants follow.\nInfo Here is the \u0026quot;info\u0026quot; style.\nTip Here is a \u0026quot;tip\u0026quot; variant of a notice.\nWarning Here is the \u0026quot;warning\u0026quot; flavor of a notice.\nAlso note that the content of a notice can contain anything you could put on a normal page - as shown below:\nComplex Notices are Possible! This is a notice that has a lot of various kinds of content in it.\nHere is a bulleted list With more than one bullet And even more than one level Code blocks are fine here, too....\n1public void SayHello() 2{ 3 Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); 4} Productivity Booster! If you're using VS Code for your editing, copy the .vscode\\clarity.code-snippets file into a .vscode root folder on your repo. This will enable you to type note then \u0026lt;tab\u0026gt; then choose with up/down arrows which flavor notice you want, then \u0026lt;tab\u0026gt; again to provide a title, then \u0026lt;tab\u0026gt; to add your content!\nTo use the snippet, you need to first enable quickSuggestions for Markdown (one time only):\nGo to Preferences-\u0026gt;Settings then search for quickSuggestions Follow the link to Edit in settings.json Toward the bottom of the file, paste in the following JSON: 1\u0026#34;[markdown]\u0026#34;: { 2 \u0026#34;editor.quickSuggestions\u0026#34;: true 3 } Close and save the settings. ","link":"https://giftcp.github.io/post/notices/","section":"post","tags":null,"title":"Using Notices"},{"body":"","link":"https://giftcp.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://giftcp.github.io/tags/css/","section":"tags","tags":null,"title":"Css"},{"body":"","link":"https://giftcp.github.io/tags/featured/","section":"tags","tags":null,"title":"Featured"},{"body":"","link":"https://giftcp.github.io/tags/html/","section":"tags","tags":null,"title":"Html"},{"body":"","link":"https://giftcp.github.io/tags/markdown/","section":"tags","tags":null,"title":"Markdown"},{"body":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nImages Local image, alt text as caption The following image is located within the Hugo site. Because it has alt text but no title text, the caption is generated by the alt text.\nRemote image, specified caption The following image is loaded from a remote URL. The alt text is the same (for screen readers and in cases when the image doesn't load) but because a separate title is provided, the title is used for the caption:\nThis is Jane Doe Image with alt text and no caption Alt text is always recommended for SEO, accessibility and in cases when images don't load. However, you don't necessarily always want an image to have a caption. In that case, use a title with one space:\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don't communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren't part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;!-- this line is extraneous 2Error from server (Forbidden): deployments.apps is forbidden: User \u0026#34;chiptest\u0026#34; cannot create resource \u0026#34;deployments\u0026#34; in API group \u0026#34;apps\u0026#34; in the namespace \u0026#34;default\u0026#34; --\u0026gt; 11\u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo's internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike's talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","link":"https://giftcp.github.io/post/markdown-syntax/","section":"post","tags":["markdown","css","html","themes","featured"],"title":"Markdown Syntax Guide"},{"body":"","link":"https://giftcp.github.io/categories/themes/","section":"categories","tags":null,"title":"Themes"},{"body":"","link":"https://giftcp.github.io/tags/themes/","section":"tags","tags":null,"title":"Themes"},{"body":"","link":"https://giftcp.github.io/tags/privacy/","section":"tags","tags":null,"title":"Privacy"},{"body":"Hugo ships with several Embedded Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nInstagram Simple Shortcode YouTube Privacy Enhanced Shortcode X Simple Shortcode Owl bet you\u0026#39;ll lose this staring contest 🦉 pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 See shortcode documentation for more details.\nVimeo Simple Shortcode ","link":"https://giftcp.github.io/post/rich-content/","section":"post","tags":["shortcodes","privacy"],"title":"Rich Content"},{"body":"","link":"https://giftcp.github.io/tags/shortcodes/","section":"tags","tags":null,"title":"Shortcodes"},{"body":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","link":"https://giftcp.github.io/post/placeholder-text/","section":"post","tags":["markdown","text"],"title":"Placeholder Text"},{"body":"","link":"https://giftcp.github.io/tags/text/","section":"tags","tags":null,"title":"Text"},{"body":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/hooks/head-end.html Add these lines to the newly created partial: 1{{ if or .Params.math .Site.Params.math }} 2{{ partial \u0026#34;math.html\u0026#34; . }} 3{{ end }} To enable KaTeX globally set the parameter math to true in a project's configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Block math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","link":"https://giftcp.github.io/post/math-typesetting/","section":"post","tags":null,"title":"Math Typesetting"},{"body":"","link":"https://giftcp.github.io/tags/emoji/","section":"tags","tags":null,"title":"Emoji"},{"body":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site's configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1.emoji { 2 font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; 3}","link":"https://giftcp.github.io/post/emoji-support/","section":"post","tags":["emoji"],"title":"Emoji Support"},{"body":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\nhttps://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremely fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","link":"https://giftcp.github.io/about/","section":"","tags":[],"title":"About"}]